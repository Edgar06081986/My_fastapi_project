from contextlib import asynccontextmanager
from fastapi import FastAPI
from starlette.middleware.cors import CORSMiddleware
from src.api_v1.clients.end_client import router as client_router
from src.api_v1.orders.end_order import router as order_router
from src.api_v1.jewelers.end_jeweler import router as jeweler_router
from src.demo_auth.demo_jwt_auth import router as demo_jwt_auth_router
from src.config import yc_settings, settings
from src.logger import logger
import asyncio
from src.bot.main import start_bot


logger.info("FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
logger.warning("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
logger.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


@asynccontextmanager
async def lifespan(app: FastAPI):
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ aiogram –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ")
    asyncio.create_task(start_bot())
    yield
    logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")


app = FastAPI(lifespan=lifespan)

app = FastAPI(lifespan=lifespan)

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ origins
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

app.include_router(demo_jwt_auth_router)
app.include_router(client_router, prefix=settings.api_v1_prefix)
app.include_router(order_router, prefix=settings.api_v1_prefix)
app.include_router(jeweler_router, prefix=settings.api_v1_prefix)

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
if settings.api_v1_prefix != yc_settings.api_v1_prefix_2:
    app.include_router(client_router, prefix=yc_settings.api_v1_prefix_2)
    app.include_router(order_router, prefix=yc_settings.api_v1_prefix_2)
    app.include_router(jeweler_router, prefix=yc_settings.api_v1_prefix_2)
