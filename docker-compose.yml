services:
  postgainer:
    image: postgres:latest
    container_name: postgainer
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
#    user: "1000:1000"  # соответствует PUID=1000 и PGID=1000  на работе 1001 и 1001 №№№№№№№№№
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - "5082:5050"
    env_file:
      - .env.pg4
    volumes:
    - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgainer

  fastapi:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env.db
      - .env.yc
    depends_on:
      - postgainer

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
        - "3000:3000"
    volumes:
        - grafana_data:/var/lib/grafana
    environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/promtail.yaml
      - /var/log:/var/log          # Пример: чтение системных логов
      - ./logs:/app/logs           # Пример: логи твоего приложения
    command: -config.file=/etc/promtail/promtail.yaml
    restart: unless-stopped
volumes:
  pg_data:
  pgadmin_data:
  grafana_data:
