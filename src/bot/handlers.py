from aiogram import Router, types
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from src.models.models import JewelersOrm

router = Router()


@router.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ú–æ–π –Æ–≤–µ–ª–∏—Ä –±–æ—Ç.")


@router.message(Command("help"))
async def handle_help(message: types.Message):
    text = "–Ø –ú–æ–π –Æ–≤–µ–ª–∏—Ä –±–æ—Ç.\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–∞–∫–æ–µ –Ω–∏–±—É–¥—å —Å–æ–æ–±—â–µ–Ω–∏–µ!"
    await message.answer(text=text)


@router.message(Command("jewelers"))
async def get_jewelers_handler(message: types.Message, session: AsyncSession):
    result = await session.execute(select(JewelersOrm))
    jewelers = result.scalars().all()
    if not jewelers:
        await message.answer("–Æ–≤–µ–ª–∏—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    text = "\n".join([f"{j.name} ‚Äî {j.city}" for j in jewelers])
    await message.answer(f"üíé –°–ø–∏—Å–æ–∫ —é–≤–µ–ª–∏—Ä–æ–≤:\n{text}")
